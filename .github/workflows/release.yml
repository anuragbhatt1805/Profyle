name: Release and Version

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write
  issues: write

jobs:
  version:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release):')"

    outputs:
      version-updated: ${{ steps.version-check.outputs.version-updated }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@bhattdev.in"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check for version update
        id: version-check
        run: |
            if git diff --exit-code package.json; then
            echo "No version update found."
            echo "version-updated=false" >> $GITHUB_OUTPUT
            else
            echo "Version updated."
            echo "version-updated=true" >> $GITHUB_OUTPUT
            fi

      - name: Commit version update
        if: ${{ steps.version-check.outputs.version-updated == 'true' }}
        run: |
          yarn release

      - name: Push changes
        if: ${{ steps.version-check.outputs.version-updated == 'true' }}
        run: |
          git push origin main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
